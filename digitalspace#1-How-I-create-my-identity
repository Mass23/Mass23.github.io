<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>How-I-create-my-identity</title>
    <style>
        body { margin: 0; overflow: hidden; }
        canvas { display: block; }
    </style>
</head>
<body>
    <!-- Babylon.js Library -->
    <script src="https://cdn.babylonjs.com/babylon.js"></script>
    <script src="https://cdn.babylonjs.com/gui/babylon.gui.min.js"></script>

    <canvas id="renderCanvas"></canvas>

    <script>
        // Set up the Babylon.js scene
        const canvas = document.getElementById("renderCanvas");
        const engine = new BABYLON.Engine(canvas, true);

        const createScene = () => {
            const scene = new BABYLON.Scene(engine);
            scene.clearColor = new BABYLON.Color3(0, 0, 0); // Black background

            // Camera setup
            const camera = new BABYLON.UniversalCamera("camera", new BABYLON.Vector3(0, 1.5, -2), scene);
            camera.attachControl(canvas, true);
            camera.speed = 0.2;

            // Lighting
            const light = new BABYLON.HemisphericLight("light", new BABYLON.Vector3(0, 1, 0), scene);
            light.intensity = 0.7;

            // Materials
            const wallMaterial = new BABYLON.StandardMaterial("wallMaterial", scene);
            wallMaterial.diffuseColor = new BABYLON.Color3.FromHexString("#101B29");

            // Create room walls
            const width = 4, height = 3, depth = 5;

            const wallPositions = [
                { pos: new BABYLON.Vector3(0, 1.5, -depth / 2), rot: 0 },    // Front
                { pos: new BABYLON.Vector3(0, 1.5, depth / 2), rot: Math.PI },  // Back
                { pos: new BABYLON.Vector3(-width / 2, 1.5, 0), rot: Math.PI / 2 },  // Left
                { pos: new BABYLON.Vector3(width / 2, 1.5, 0), rot: -Math.PI / 2 }   // Right
            ];

            wallPositions.forEach(({ pos, rot }) => {
                const wall = BABYLON.MeshBuilder.CreatePlane("wall", { width: width, height: height }, scene);
                wall.material = wallMaterial;
                wall.position = pos;
                wall.rotation.y = rot;
            });

            
            // Text on Back Wall
            const advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI("UI");
            const textBlock = new BABYLON.GUI.TextBlock();
            textBlock.text = "How-I-create-\tmy-identity\n\nCopyright Massimo Bourquin, 2024";
            textBlock.fontFamily = "Andale Mono";
            textBlock.color = "lightgray";
            textBlock.fontSize = 24;
            textBlock.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;
            textBlock.textVerticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_CENTER;

            advancedTexture.addControl(textBlock);
            return scene;
        };

        const scene = createScene();

        engine.runRenderLoop(() => {
            scene.render();
        });

        window.addEventListener("resize", () => {
            engine.resize();
        });
    </script>
</body>
</html>
